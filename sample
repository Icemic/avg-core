

/* disable eslint */
@connect({
  to: 'something',
  bind: ['something', {
    reactions: (self, target) => ({
      number: {
        listener: () => self.text,
        handler: () => {
          target.showLog();
        }
      }
    })
  }],
  mergeProps: false
})
@define({
  instance: () => {
    return inst;
  },
  model: {
    text: ''
  },
  views: self => ({
    get reservedText() {
      return self.text.split('').reverse().join('');
    }
  }),
  actions: self => ({
    changeText() {
      self.text = '' + Math.random();
    },
    showLog() {
      console.log(123);
    }
  })
})
class Something extends Component {
  render() {

    const { something } = this.data;

    return (
      <Button text={something.text} onClick={something.changeText}/>
    );
  }
}


@connect({
  to: 'another',
  bind: ['something']
})
@define({
  name: 'another',
  model: {
    text: ''
  },
  views: self => ({
    get reservedText() {
      return self.text.split('').reverse().join('');
    }
  }),
  actions: self => ({
    changeText() {
      self.text = '' + Math.random();
    }
  }),
  reactions: self => ({
    number: () => self.number
  })
})
class Another extends Plugin {
  constructor() {
    super();
  }

}


core.install(Another, { to: 'another', bind: [] })